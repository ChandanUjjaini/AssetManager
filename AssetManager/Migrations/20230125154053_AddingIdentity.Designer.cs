// <auto-generated />
using System;
using AssetManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManager.Migrations
{
    [DbContext(typeof(AssetManagerContext))]
    [Migration("20230125154053_AddingIdentity")]
    partial class AddingIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetManager.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LPrice")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pdate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CountryId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetManager.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Desktop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Printer"
                        });
                });

            modelBuilder.Entity("AssetManager.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HP"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Epson"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Xerox"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Lenovo"
                        });
                });

            modelBuilder.Entity("AssetManager.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "DZD",
                            Name = "Algeria "
                        },
                        new
                        {
                            Id = 2,
                            Code = "ARS",
                            Name = "Argentina "
                        },
                        new
                        {
                            Id = 3,
                            Code = "AUD",
                            Name = "Australia "
                        },
                        new
                        {
                            Id = 4,
                            Code = "BHD",
                            Name = "Bahrain "
                        },
                        new
                        {
                            Id = 5,
                            Code = "BDT",
                            Name = "Bangladesh "
                        },
                        new
                        {
                            Id = 6,
                            Code = "BYN",
                            Name = "Belarus "
                        },
                        new
                        {
                            Id = 7,
                            Code = "BOB",
                            Name = "Bolivia "
                        },
                        new
                        {
                            Id = 8,
                            Code = "BWP",
                            Name = "Botswana "
                        },
                        new
                        {
                            Id = 9,
                            Code = "BRL",
                            Name = "Brazil "
                        },
                        new
                        {
                            Id = 10,
                            Code = "GBP",
                            Name = "Britain "
                        },
                        new
                        {
                            Id = 11,
                            Code = "BND",
                            Name = "Brunei "
                        },
                        new
                        {
                            Id = 12,
                            Code = "BGN",
                            Name = "Bulgaria "
                        },
                        new
                        {
                            Id = 13,
                            Code = "CAD",
                            Name = "Canada "
                        },
                        new
                        {
                            Id = 14,
                            Code = "CLP",
                            Name = "Chile "
                        },
                        new
                        {
                            Id = 15,
                            Code = "CNY",
                            Name = "China "
                        },
                        new
                        {
                            Id = 16,
                            Code = "COP",
                            Name = "Colombia "
                        },
                        new
                        {
                            Id = 17,
                            Code = "CRC",
                            Name = "Costa Rica "
                        },
                        new
                        {
                            Id = 18,
                            Code = "HRK",
                            Name = "Croatia "
                        },
                        new
                        {
                            Id = 19,
                            Code = "CZK",
                            Name = "Czech Republic "
                        },
                        new
                        {
                            Id = 20,
                            Code = "DKK",
                            Name = "Danmark "
                        },
                        new
                        {
                            Id = 21,
                            Code = "DOP",
                            Name = "Dominican Republic "
                        },
                        new
                        {
                            Id = 22,
                            Code = "EGP",
                            Name = "Egypt "
                        },
                        new
                        {
                            Id = 23,
                            Code = "SVC",
                            Name = "El Salvador "
                        },
                        new
                        {
                            Id = 24,
                            Code = "EUR",
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 25,
                            Code = "FJD",
                            Name = "Fiji "
                        },
                        new
                        {
                            Id = 26,
                            Code = "GEL",
                            Name = "Georgia "
                        },
                        new
                        {
                            Id = 27,
                            Code = "GHS",
                            Name = "Ghana "
                        },
                        new
                        {
                            Id = 28,
                            Code = "HKD",
                            Name = "Hong Kong "
                        },
                        new
                        {
                            Id = 29,
                            Code = "HUF",
                            Name = "Hungary "
                        },
                        new
                        {
                            Id = 30,
                            Code = "INR",
                            Name = "India "
                        },
                        new
                        {
                            Id = 31,
                            Code = "IDR",
                            Name = "Indonesia "
                        },
                        new
                        {
                            Id = 32,
                            Code = "IQD",
                            Name = "Iraq "
                        },
                        new
                        {
                            Id = 33,
                            Code = "ILS",
                            Name = "Israel "
                        },
                        new
                        {
                            Id = 34,
                            Code = "JPY",
                            Name = "Japan "
                        },
                        new
                        {
                            Id = 35,
                            Code = "JOD",
                            Name = "Jordan "
                        },
                        new
                        {
                            Id = 36,
                            Code = "KZT",
                            Name = "Kazakhstan "
                        },
                        new
                        {
                            Id = 37,
                            Code = "KES",
                            Name = "Kenya "
                        },
                        new
                        {
                            Id = 38,
                            Code = "KWD",
                            Name = "Kuwait "
                        },
                        new
                        {
                            Id = 39,
                            Code = "LBP",
                            Name = "Lebanese "
                        },
                        new
                        {
                            Id = 40,
                            Code = "LTL",
                            Name = "Lithuania "
                        },
                        new
                        {
                            Id = 41,
                            Code = "MOP",
                            Name = "Macanese "
                        },
                        new
                        {
                            Id = 42,
                            Code = "MYR",
                            Name = "Malaysia "
                        },
                        new
                        {
                            Id = 43,
                            Code = "MUR",
                            Name = "Mauritius "
                        },
                        new
                        {
                            Id = 44,
                            Code = "MXN",
                            Name = "Mexico "
                        },
                        new
                        {
                            Id = 45,
                            Code = "MAD",
                            Name = "Morocco "
                        },
                        new
                        {
                            Id = 46,
                            Code = "MMK",
                            Name = "Myanmar "
                        },
                        new
                        {
                            Id = 47,
                            Code = "NAD",
                            Name = "Namibia "
                        },
                        new
                        {
                            Id = 48,
                            Code = "NPR",
                            Name = "Nepal "
                        },
                        new
                        {
                            Id = 49,
                            Code = "NZD",
                            Name = "New Zealand "
                        },
                        new
                        {
                            Id = 50,
                            Code = "NIO",
                            Name = "Nicaraguan "
                        },
                        new
                        {
                            Id = 51,
                            Code = "NGN",
                            Name = "Nigeria "
                        },
                        new
                        {
                            Id = 52,
                            Code = "NOK",
                            Name = "Norway "
                        },
                        new
                        {
                            Id = 53,
                            Code = "OMR",
                            Name = "Oman "
                        },
                        new
                        {
                            Id = 54,
                            Code = "PKR",
                            Name = "Pakistan "
                        },
                        new
                        {
                            Id = 55,
                            Code = "PYG",
                            Name = "Paraguay "
                        },
                        new
                        {
                            Id = 56,
                            Code = "PEN",
                            Name = "Peru "
                        },
                        new
                        {
                            Id = 57,
                            Code = "PHP",
                            Name = "Philippine "
                        },
                        new
                        {
                            Id = 58,
                            Code = "PLN",
                            Name = "Poland "
                        },
                        new
                        {
                            Id = 59,
                            Code = "QAR",
                            Name = "Qatar "
                        },
                        new
                        {
                            Id = 60,
                            Code = "RON",
                            Name = "Romania "
                        },
                        new
                        {
                            Id = 61,
                            Code = "RUB",
                            Name = "Russia "
                        },
                        new
                        {
                            Id = 62,
                            Code = "SAR",
                            Name = "Saudi Arabia "
                        },
                        new
                        {
                            Id = 63,
                            Code = "RSD",
                            Name = "Serbia "
                        },
                        new
                        {
                            Id = 64,
                            Code = "SGD",
                            Name = "Singapore "
                        },
                        new
                        {
                            Id = 65,
                            Code = "ZAR",
                            Name = "South African "
                        },
                        new
                        {
                            Id = 66,
                            Code = "KRW",
                            Name = "South Korea "
                        },
                        new
                        {
                            Id = 67,
                            Code = "LKR",
                            Name = "Sri Lanka "
                        },
                        new
                        {
                            Id = 68,
                            Code = "SEK",
                            Name = "Sweden "
                        },
                        new
                        {
                            Id = 69,
                            Code = "CHF",
                            Name = "Switzerland "
                        },
                        new
                        {
                            Id = 70,
                            Code = "TWD",
                            Name = "Taiwan "
                        },
                        new
                        {
                            Id = 71,
                            Code = "TZS",
                            Name = "Tanzania "
                        },
                        new
                        {
                            Id = 72,
                            Code = "THB",
                            Name = "Thailand "
                        },
                        new
                        {
                            Id = 73,
                            Code = "TND",
                            Name = "Tunisia "
                        },
                        new
                        {
                            Id = 74,
                            Code = "TRY",
                            Name = "Turky "
                        },
                        new
                        {
                            Id = 75,
                            Code = "UGX",
                            Name = "Uganda "
                        },
                        new
                        {
                            Id = 76,
                            Code = "UAH",
                            Name = "Ukrain "
                        },
                        new
                        {
                            Id = 77,
                            Code = "AED",
                            Name = "United Arab Emirates "
                        },
                        new
                        {
                            Id = 78,
                            Code = "UYU",
                            Name = "Uruguayan "
                        },
                        new
                        {
                            Id = 79,
                            Code = "USD",
                            Name = "USA"
                        },
                        new
                        {
                            Id = 80,
                            Code = "UZS",
                            Name = "Uzbekistan "
                        },
                        new
                        {
                            Id = 81,
                            Code = "VES",
                            Name = "Venezuela "
                        },
                        new
                        {
                            Id = 82,
                            Code = "VND",
                            Name = "Vietnam "
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AssetManager.Models.Asset", b =>
                {
                    b.HasOne("AssetManager.Models.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManager.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManager.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("Brand");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
